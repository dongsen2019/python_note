# lesson 112 魔术方法

"""
1.__init__ 初始化方法
    触发机制：当实例化对象之后就会立即触发的方法
    作用：    为当前创建的对象完成一些初始化的操作，比如：成员属性的赋值，方法的调用，打开或创建一些资源。。
    参数：    一个self，接受当前对象，其他参数根据需求进行定义即可
    返回值：  无
    注意事项：无

2.__new__ 构造方法
    触发机制：实例化对象时自动触发(在__init__之前触发)
    作用：    管理控制对象创建的过程
    参数：    一个cls 接收当前类，其他参数根据初始化方法的参数进行决定
    返回值：  必须返回object.__new__(cls)进行对象的创建，如果没有返回值，则实例化对象的结果为None
    注意事项：
             __new__方法的参数和__init__方法的参数要保持一致，除了第一个参数
             必须返回object.__new__(cls)进行对象的创建，如果没有返回值，则实例化对象的结果为None
    应用场景：设计模式中的单例设计模式

3.__del__ 析构方法
    触发机制：当该类对象被销毁时，自动触发
    作用：    关闭或释放对象创建时打开或创建的一些资源
    参数：    一个self，接受当前的对象
    返回值：  无
    注意事项：无

4.__call__
    触发机制：把对象当做函数直接调用时自动触发
    作用：    一般用于归纳类或对象的操作步骤，方便调用
    参数：    一个self接收当前对象，其他参数根据调用需求确定
    返回值：  可有可无
"""

# 定义一个人类
class Person():

    # 构造方法
    def __new__(cls, *args, **kwargs):
        print("触发了构造方法")
        print(args)

        # 如果在该方法中没有返回如下格式，则无法创建对象
        return object.__new__(cls)

    # 初始化方法
    def __init__(self, name, age, sex):
        print("初始化方法触发了。。。")
        self.name = name
        self.age = age
        self.sex = sex

    def __call__(self, *args, **kwargs):
        print("你把对象当成了函数进行调用。。。")

    # 析构方法
    def __del__(self):
        print("析构方法触发了。。。")


# 实例化对象
zs = Person("张三丰", 180, '男')
print(zs)

zs()