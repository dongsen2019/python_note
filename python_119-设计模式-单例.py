# lesson 119 设计模式-单例

"""
设计模式
    设计模式是前人为完成某个功能或需求，根据经验和总结，对实现的代码步骤和代码设计进行了总结和归纳，
    成为了实现某个需求的经典模式

    设计模式并不是固定的代码格式，而是一种面向对象编程的设计

单例（单态）设计模式
    在当前脚本中，同一个类只能创建出一个对象去使用。这种情况就成为单例(单态)
"""

class Demo():
    pass

# 实例化对象
a = Demo()
b = Demo()
print(a, b)

"""
python中的单例设计模式实现

1.需要有一个方法，可以去控制当前对象的创建？
    构造方法 __new__
2.需要有一个标识来存储和表示是否由对象
    创建一个私有属性 进行存储，默认值为None
3.在创建对象的方法中去检测和判断是否有对象？
    如果没有对象，则创建对象，并且把对象存储起来
    如果存储的是对象，则直接返回对象，就不需要创建新的对象了
"""

# 重点：
class Demo():
    # 2. 定义私有属性存储对象，默认值为None
    __obj = None

    # 1.定义构造方法
    def __new__(cls, *args, **kwargs):
        # 3.在创建对象的过程中，判断是否有对象
        if not cls.__obj:
            # 如果没有对象，则创建对象,并且存储起来
            cls.__obj = object.__new__(cls)
        # 返回对象
        return cls.__obj

a = Demo()
b = Demo()
print(a, b)
"""
<__main__.Demo object at 0x0000000002949B00> 
<__main__.Demo object at 0x0000000002949B00>
"""



